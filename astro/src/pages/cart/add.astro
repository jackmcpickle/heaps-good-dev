---
import { eq } from 'drizzle-orm';
import { db, cartItemTable, type NewCartItem } from '~/db/schema';
import { isNil } from '@/typeGuards';
import { createNewCartDb } from '@/utils/createNewCartDb';
import { getCartDb } from '@/utils/getCartDb';
import AddToCartForm from '@/components/AddToCartForm.astro';

export const partial = true;

let addToCartMessage = 'Add to Cart';

const data = await Astro.request.formData();
const quantity = data.get('quantity');
const productId = data.get('productId');
// Validate the data - you'll probably want to do more than this
if (!quantity || !productId) {
    throw new Error('Missing product details');
}

const product = await db.query.productTable.findFirst({
    where: (products) => eq(products.id, Number(productId)),
});

if (!product) {
    throw new Error('Product not found');
}

let cart = await getCartDb(Astro.cookies);
if (!cart) {
    cart = await createNewCartDb(Astro.cookies);
}

if (isNil(cart)) {
    throw new Error('Cart not found');
}

const newCartItem = {
    cartId: cart.id,
    productId: product.id,
    quantity: Number(quantity),
} satisfies NewCartItem;

await db.insert(cartItemTable).values(newCartItem);

Astro.response.headers.set('HX-Trigger', 'cartupdate');

addToCartMessage = 'Success';
---

<AddToCartForm
    addToCartMessage={addToCartMessage}
    productId={product.id}
/>
